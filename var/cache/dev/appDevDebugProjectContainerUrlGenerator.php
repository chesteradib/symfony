<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_item_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\ItemController::mobileShowAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/m/item',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_item_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\ItemController::mobileNewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/m/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_item_creates' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\ItemController::mobileCreatesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/m/creates',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_item_edits' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\ItemController::mobileEditsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/m/edits',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_item_updates' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\ItemController::mobileUpdatesAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/m/updates',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_item_deletes' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\ItemController::mobileDeletesAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/m/deletes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_shop_show' => array (  0 =>   array (    0 => 'shop_id',    1 => 'page',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileShopController::displayMobileShopAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/g',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'shop_id',    ),    3 =>     array (      0 => 'text',      1 => '/m',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_shop_from_my_network_show' => array (  0 =>   array (    0 => 'shop_id',    1 => 'page',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileShopController::displayMobileShopFromMyNetworkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/g/g',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'shop_id',    ),    3 =>     array (      0 => 'text',      1 => '/m',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_shop_from_my_market_show' => array (  0 =>   array (    0 => 'shop_id',    1 => 'page',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileShopController::displayMobileShopFromMyMarketAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/g/d',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'shop_id',    ),    3 =>     array (      0 => 'text',      1 => '/m',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_my_shop' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileMyShopController::displayMobileMyShopAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/m/my/shop/g',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_my_market' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileMyMarketController::displayMobileMyMarketAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/m/my/market/g',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_my_inbox' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileMessagingController::mobileMyInboxAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/m/my/inbox/g',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_discussion' => array (  0 =>   array (    0 => 'post_id',    1 => 'shop_id',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileMessagingController::getDiscussionAboutPostWithAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'shop_id',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'post_id',    ),    3 =>     array (      0 => 'text',      1 => '/m/mobile_discussion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_admin' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileAdminController::mobileAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/m/my/admin/g',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_index' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileIndexController::mobileIndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/m/my/index/g',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileSecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/m/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileRegistrationController::mobileRegisterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/m/register',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileRegistrationController::mobileCheckEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/m/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileRegistrationController::mobileConfirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/m/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileRegistrationController::mobileConfirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/m/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileResettingController::requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/m/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileResettingController::sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/m/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileResettingController::checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/m/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileResettingController::resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/m/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_all_my_network' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileFollowController::mobileAllMyNetworkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/m/my/network/g',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_all_my_followeds' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileFollowController::mobileAllMyFollowedsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/m/my/followeds/g',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_page_of_search' => array (  0 =>   array (    0 => 'SearchText',    1 => 'page',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileAdminController::pageOfSearchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/g',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'SearchText',    ),    3 =>     array (      0 => 'text',      1 => '/m/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_site_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileAdminController::searchAction',  ),  2 =>   array (    '_method' => 'post|head',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/m/search/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_category' => array (  0 =>   array (    0 => 'categoryId',    1 => 'page',  ),  1 =>   array (    '_controller' => 'Mobile\\Bundle\\ManagementBundle\\Controller\\MobileCategoryController::mobileCategoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/g',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'categoryId',    ),    3 =>     array (      0 => 'text',      1 => '/m/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'global_item_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\PostController::globalShowAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/g/item',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\PostController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\PostController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_edits' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\PostController::editsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edits',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_creates' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\PostController::createsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/creates',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_updates' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\PostController::updatesAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/updates',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_deletes' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\PostController::deletesAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/deletes',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_bought' => array (  0 =>   array (    0 => 'post_id',  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\PostController::boughtAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/bought',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'post_id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_my_market_posts' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\MarketController::displayMarketPostsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/my_market_posts/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_my_market' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\MarketController::displayMyMarketAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/my_market/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_my_market_dialog' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\MarketController::myMarketDialogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/my_market_dialog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_posts' => array (  0 =>   array (    0 => 'shop_id',  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\ShopController::displayPostsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/posts/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'shop_id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_my_shop' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\MyShopController::displayMyShopAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/my_shop/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_shop' => array (  0 =>   array (    0 => 'shop_id',  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\ShopController::displayShopAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'shop_id',    ),    2 =>     array (      0 => 'text',      1 => '/shop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'image_uploads' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\ImageController::uploadsAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/image_uploads',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'image_deletes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\ImageController::deletesAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/image_deletes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_shop' => array (  0 =>   array (    0 => 'shop_id',  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\ExternalController::showShopAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/external',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'shop_id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_category' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\CategoryController::getArticlesOfCategoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page_of_show_category' => array (  0 =>   array (    0 => 'category_id',  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\CategoryController::getPageOfArticlesOfCategoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category_id',    ),    2 =>     array (      0 => 'text',      1 => '/page_of_category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_retweet' => array (  0 =>   array (    0 => 'post_id',  ),  1 =>   array (    '_controller' => 'Shop\\Bundle\\ManagementBundle\\Controller\\PostController::retweetAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/retweet',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'post_id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_site_search_posts' => array (  0 =>   array (    0 => 'search_text',  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\AdminController::pageOfSearchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/site/search/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search_text',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'site_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\AdminController::searchAction',  ),  2 =>   array (    '_method' => 'post|head',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/site/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all_jawla' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\AdminController::allJawlaAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/all_jawla',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all_jawla_items' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\AdminController::allJawlaItemsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/all_jawla_items',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all_new_posters' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\AdminController::allNewPostersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/all_new_posters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page_of_all_new_posters' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\AdminController::pageOfAllNewPostersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/page_of_all_new_posters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_admin_page' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\AdminController::adminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'non_fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\SecurityController::bigLoginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'follow_unfollow_shop' => array (  0 =>   array (    0 => 'shop_id',  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\FollowController::followUnfollowAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'shop_id',    ),    1 =>     array (      0 => 'text',      1 => '/followunfollow',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'network_messages' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\FollowController::networkMessagesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/network_messages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'follow_seen' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\FollowController::followSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/follow_seen',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'last_date' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\FollowController::lastDateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/last_date',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all_my_network' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\FollowController::allMyNetworkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/all_my_network',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page_of_all_my_network' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\FollowController::pageOfAllMyNetworkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/page_of_all_my_network',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all_my_followeds' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\FollowController::allMyFollowedsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/all_my_followeds',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page_of_all_my_followeds' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\FollowController::pageOfAllMyFollowedsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/page_of_my_followeds',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\IndexController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\IndexController::mobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_message' => array (  0 =>   array (    0 => 'receiver_id',    1 => 'post_id',  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\MessagesController::addMessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add_message',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'post_id',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'receiver_id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'new_message' => array (  0 =>   array (    0 => 'receiver_id',    1 => 'post_id',  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\MessagesController::newMessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'post_id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'receiver_id',    ),    2 =>     array (      0 => 'text',      1 => '/new_message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inbox_messages' => array (  0 =>   array (    0 => 'receiver_id',  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\MessagesController::inboxMessagesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/inbox_messages',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'receiver_id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all_my_inbox' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\MessagesController::allMyInboxAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/all_my_inbox',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'page_of_all_my_inbox' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\MessagesController::pageOfAllMyInboxAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/page_of_all_my_inbox',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'messages_between_two_users_about_article' => array (  0 =>   array (    0 => 'sender_id',    1 => 'receiver_id',    2 => 'post_id',  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\MessagesController::getMessagesBetweenTwoUsersAboutArticleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'post_id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'receiver_id',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sender_id',    ),    3 =>     array (      0 => 'text',      1 => '/messages_between_two_users_about_article',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'message_seen' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\MessagesController::messageSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message_seen',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'messages_seen' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\MessagesController::messagesSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/messages_seen',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'latlngjson' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\ProfileController::latLngJsonAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/latlngjson',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_profile_picture' => array (  0 =>   array (    0 => 'user_id',  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\ProfileController::updateProfilePictureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update_profile_picture',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user_id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_profile_picture' => array (  0 =>   array (    0 => 'img_id',  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\ProfileController::deleteProfilePictureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete_profile_picture',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'img_id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deactivate_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\ProfileController::deactivateProfileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/deactivate_profile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Members\\Bundle\\ManagementBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.change_password.controller:changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liip_imagine_filter_runtime' => array (  0 =>   array (    0 => 'filter',    1 => 'hash',    2 => 'path',  ),  1 =>   array (    '_controller' => 'liip_imagine.controller:filterRuntimeAction',  ),  2 =>   array (    'filter' => '[A-z0-9_-]*',    'path' => '.+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'path',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'hash',    ),    2 =>     array (      0 => 'text',      1 => '/rc',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[A-z0-9_-]*',      3 => 'filter',    ),    4 =>     array (      0 => 'text',      1 => '/media/cache/resolve',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'liip_imagine_filter' => array (  0 =>   array (    0 => 'filter',    1 => 'path',  ),  1 =>   array (    '_controller' => 'liip_imagine.controller:filterAction',  ),  2 =>   array (    'filter' => '[A-z0-9_-]*',    'path' => '.+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'path',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[A-z0-9_-]*',      3 => 'filter',    ),    2 =>     array (      0 => 'text',      1 => '/media/cache/resolve',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
